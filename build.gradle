import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
  repositories {
    jcenter()
    maven {
      url "http://www.knopflerfish.org/maven2/"
    }
    maven {
      url "https://dist.xebialabs.com/public/maven2/"
    }
  }
}
plugins {
  id "com.github.hierynomus.license" version "0.11.0"
  id "com.xebialabs.xl-deploy" version "0.2.0"
}
apply plugin: 'java'

group 'com.xebialabs.xlrelease.plugins'
version '0.2-SNAPSHOT'

def xlReleaseHome = project.hasProperty('xlReleaseHome') ? project.xlReleaseHome : System.env.XLRELEASE_HOME
if (!xlReleaseHome) {
  throw new RuntimeException("Please specify location of unpacked XL Release server installation in your " +
      "gradle.properties or with '-PxlReleaseHome=/path/to/xl/release/server' command line option")
}

dependencies {
  compile fileTree(dir: "$xlReleaseHome/lib", include: [
      'xl-release-server-*.jar',
      'udm-plugin-api-*.jar',
      'xl-repository-api-*.jar',
      'swagger-*.jar',
      'jaxrs-api-*.jar',
      'guava-*.jar',
      'config-*.jar',
      '*jgit-*.jar',
      'jsch-*.jar',
      '*slf4j-*.jar', 'logback-*.jar'
  ])
  compile 'org.eclipse.mylyn.github:org.eclipse.egit.github.core:2.1.5'

  testCompile 'org.assertj:assertj-core:1.6.0'
  testCompile 'junit:junit:4.11'
  testCompile 'org.hamcrest:hamcrest-core:1.3'
  testCompile 'org.hamcrest:hamcrest-library:1.3'
  testCompile 'org.mockito:mockito-core:1.9.5'
}

license {
  header rootProject.file('src/main/license/xebialabs_community.license')
  strictCheck true
  excludes(["**/*.json", "**/*.conf", "**/bootstrap/*.py"])
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}
artifacts {
  archives sourcesJar
  archives javadocJar
}

processResources.configure {
  filter ReplaceTokens, tokens: [
      'project.version': version.toString(),
      'project.name': rootProject.name
  ]
}

xldeploy {
  xldUrl = project.property('xlr-github-plugin.xldeploy.host')
  xldUsername = project.property('xlr-github-plugin.xldeploy.username')
  xldPassword = project.property('xlr-github-plugin.xldeploy.password')
}
tasks.deploy.configure {
  environmentId = project.property('xlr-github-plugin.xldeploy.environment')
  deletePreviouslyDeployedDar = true
  generateDeployedOnUpgrade = true
}

repositories {
  mavenLocal()
  mavenCentral()
}
